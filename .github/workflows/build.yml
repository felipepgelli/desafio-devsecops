name: Build Quarkus (Self-Hosted)

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read
  security-events: write  # para enviar SARIF ao Code Scanning

jobs:
  build:
    runs-on: self-hosted  # seu runner Windows
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      # Build Maven no Windows (usa mvnw.cmd)
      - name: Build com Maven (sem testes)
        shell: cmd
        run: .\mvnw.cmd -B -DskipTests package

      # Build da imagem Docker (variável via $env:)
      - name: Build da imagem Docker
        shell: cmd
        run: |
          set IMAGE=quarkus-service:${{ github.sha }}
          docker build -f src/main/docker/Dockerfile.jvm -t %IMAGE% .

      # Instalar Trivy (Windows, sem WSL)
      - name: Instalar Trivy (Windows)
        shell: powershell
        run: |
          $version = "0.56.2"
          Invoke-WebRequest -Uri "https://github.com/aquasecurity/trivy/releases/download/v$version/trivy_$version_Windows-64bit.zip" -OutFile "trivy.zip"
          Expand-Archive -Path "trivy.zip" -DestinationPath "$PWD\trivy" -Force
          # adiciona a pasta ao PATH deste job
          "$PWD\trivy" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          trivy -v

      # Trivy Image (gate temporário: CRITICAL)
      - name: Trivy Image
        shell: cmd
        run: |
          set IMAGE=quarkus-service:${{ github.sha }}
          trivy image --scanners vuln,secret,config ^
            --severity CRITICAL ^
            --exit-code 1 ^
            --format sarif -o trivy-image.sarif %IMAGE%

      # Trivy Filesystem (gate temporário: CRITICAL)
      - name: Trivy Filesystem
        shell: cmd
        run: |
          trivy fs --scanners vuln,secret,config ^
            --severity CRITICAL ^
            --exit-code 1 ^
            --format sarif -o trivy-fs.sarif .

      # Upload SARIF (categorias distintas para evitar conflito)
      - name: Upload SARIF (image)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif
          category: trivy-image

      - name: Upload SARIF (fs)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs.sarif
          category: trivy-fs

      # Guardar relatórios como artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-image.sarif
            trivy-fs.sarif
